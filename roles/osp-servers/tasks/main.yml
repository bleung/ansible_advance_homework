---
- name: copy keys onto workstation
  copy:
    src: "{{ item }}"
    dest: /home/cloud-user/.ssh/
  loop:
  - /root/.ssh/openstack.pub
  - /root/.ssh/openstack.pem

- name: inject openstack keys
  os_keypair:
    cloud: ospcloud
    state: present
    name: openstack
    public_key_file: /home/cloud-user/.ssh/openstack.pub

- name: Create new server instances and attaches them a network and passes metadata to the instance
  os_server:
    cloud: ospcloud
    name: "{{ item.value.name }}"
    image: "{{ item.value.image }}"
    meta: "{{ item.value.meta }}"
    flavor: "{{ item.value.flavor }}"
    security_groups: "{{ item.value.security_group }}"
    key_name: "{{ item.value.key_name }}"
    wait: yes
    nics:
    - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  loop: "{{ osp_servers | dict2items }}"

- name: Add floating IP to Servers
  os_floating_ip:
    cloud: ospcloud
    server: "{{ item.value.name }}"
    network: "{{ osp_network }}"
    reuse: yes
    wait: yes
  loop: "{{ osp_servers | dict2items }}"

- name: OpenStack servers
  os_server_info:
    cloud: ospcloud
  register: rhosp_servers

- name: Wait for server to be available
  wait_for:
    host: "{{ item.public_v4 }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  delegate_to: "{{ inventory_hostname }}"
  loop: "{{ rhosp_servers.openstack_servers }}"
